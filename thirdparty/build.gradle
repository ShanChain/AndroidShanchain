apply plugin: 'com.android.library'

project.ext.react = [
        cliPath: "../react-native/node_modules/react-native/cli.js",
        // the name of the generated asset file containing your JS bundle
        bundleAssetName: "index.android.bundle",

        // the entry file for bundle generation
        entryFile: "index.android.js",

        // whether to bundle JS and assets in debug mode
        bundleInDebug: false,

        // whether to bundle JS and assets in release mode
        bundleInRelease: true,
        // whether to bundle JS and assets in another build variant (if configured).
        // See http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Build-Variants
        // The configuration property can be in the following formats
        //         'bundleIn${productFlavor}${buildType}'
        //         'bundleIn${buildType}'
        // bundleInFreeDebug: true,
        // bundleInPaidRelease: true,
        // bundleInBeta: true,
        // whether to disable dev mode in custom build variants (by default only disabled in release)
        // for example: to disable dev mode in the staging build type (if configured)
        devDisabledInStaging: true,
        // The configuration property can be in the following formats
        //         'devDisabledIn${productFlavor}${buildType}'
        //         'devDisabledIn${buildType}'

        // the root of your project, i.e. where "package.json" lives
        root: "../react-native/",

        // where to put the JS bundle asset in debug mode
        jsBundleDirDebug: "$buildDir/intermediates/assets/debug",

        // where to put the JS bundle asset in release mode
        jsBundleDirRelease: "$buildDir/intermediates/assets/release",

        // where to put drawable resources / React Native assets, e.g. the ones you use via
        // require('./image.png')), in debug mode
        resourcesDirDebug: "$buildDir/intermediates/res/merged/debug",

        // where to put drawable resources / React Native assets, e.g. the ones you use via
        // require('./image.png')), in release mode
        resourcesDirRelease: "$buildDir/intermediates/res/merged/release",
        // by default the gradle tasks are skipped if none of the JS files or assets change; this means
        // that we don't look at files in android/ or ios/ to determine whether the tasks are up to
        // date; if you have any other folders that you want to ignore for performance reasons (gradle
        // indexes the entire tree), add them here. Alternatively, if you have JS files in android/
        // for example, you might want to remove it from here.
        inputExcludes: ["android/**", "ios/**"],

        // supply additional arguments to the packager
        extraPackagerArgs: []
]

apply from: "../react-native/node_modules/react-native/react.gradle"





android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile "com.facebook.react:react-native:+"
    testCompile 'junit:junit:4.12'
    compile project(':PushSDK')
    compile project(':easeui')
}

task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}

