apply plugin: 'com.android.application'
apply from: "${project.rootDir}/config.gradle"
apply plugin: 'org.greenrobot.greendao'
apply from: 'tinkerpatch.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        flavorDimensions "versionCode"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            abiFilters "x86", "armeabi", "armeabi-v7a", "armeabi-v8a", "mips", "mips64"
//, 'x86_64', 'arm64-v8a'
        }


        manifestPlaceholders = [
                TENCENT_APPID: "1106258060",
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "0a20b6277a625655791e3cd9", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
                //API_KEY: "UOpGblY5ZfEI5fszsaiLQhgKEogWIQeE",
        ]
    }

    packagingOptions {
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release {
            keyAlias 'zj'
            keyPassword '123456'
            storeFile file('keystore/shanchain.jks')
            storePassword 'shanchain'
            v1SigningEnabled true
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release //设置签名
            buildConfigField "boolean", "RN_DEBUG", "true"
            buildConfigField "boolean", "LOG_DEBUG", "true"
            zipAlignEnabled true //Zipalign优化
            debuggable true
            shrinkResources false //资源缩减
            minifyEnabled false //关闭混淆
            //buildConfigField "String", "HTTP_API", "http://test.xxxx.com/"
            manifestPlaceholders = [
                    app_name     : "@string/app_name_debug",
                    baidu_api_key: "He8wMBsN4ZHiwENjiZ6q2OTT5D6c1IhD"
            ]
        }
        release {
            buildConfigField "boolean", "RN_DEBUG", "false"
            // 指定签名
            signingConfig signingConfigs.release
            //设置log日记是否打印
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //Zipalign优化
            zipAlignEnabled true
            shrinkResources !project.ext.IS_DEV_ENV // 资源缩减
            //设置是否混淆
            minifyEnabled !project.ext.IS_DEV_ENV
            //加载默认混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        arkspot {
//            manifestPlaceholders = [APP_NAME: "@string/app_name"] // 配置app的应用名称
        }
        /*qianqian {
            applicationIdSuffix ".qianqian"
        manifestPlaceholders = [APP_NAME: "@string/app_name"] // 配置测试包的应用名称
            resValue 'string', 'baidu_api_key', 'He8wMBsN4ZHiwENjiZ6q2OTT5D6c1IhD'
        }*/
        tencent {}//投放应用宝市场
//        baidu {}//投放百度市场
        "360" {}//投放360市场
//        "91zhushou" {}//投放91助手
//        ANZHI {}//投放安智市场
        oppo {}//投放OPPO手机应用商店
        vivo {}//投放VIVO手机应用商店
        meizu {}//投放魅族手机应用商店
        huawei {}//投放华为手机应用商店
        xiaomi {}//投放小米手机应用商店
//        wandoujia {}//投放豌豆荚
        androidmarket {}//投放安卓市场
        ali {
            applicationId "com.shanchain.shandata"
        }//投放阿里平台
        googlePlay {}//投放google商店
        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }

    }

    configurations.all {
//        all*.exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.google.zxing'
    }

    repositories {
        flatDir { dirs 'libs' }
    }

//    dexOptions {
//        dexInProcess true
//        preDexLibraries true
//        javaMaxHeapSize "4g"//越大越好
//        incremental true
//    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

greendao {
    schemaVersion 6
    // daoPackage "com.example.model" // set package of generated classes
    daoPackage "com.shanchain.shandata.db"//greenDao生成代码所在的包名
    targetGenDir "src/main/java"//设置自动生成代码的目录
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.librarys['surportV4']
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation rootProject.ext.testLibrarys['junit']
    implementation project(':common')
    implementation project(':chatinput')
    implementation rootProject.ext.librarys.imagepicker

    //facebook登录授权
    implementation rootProject.ext.librarys['facebookLogin']
    implementation rootProject.ext.librarys['supportV7']

    implementation rootProject.ext.librarys['supportConstraint']
    implementation rootProject.ext.librarys['supportDesign']

    implementation rootProject.ext.librarys['eventbus']
    implementation rootProject.ext.librarys['buttonNavigation']
    implementation rootProject.ext.librarys['ninegridimageview']
    implementation rootProject.ext.librarys['supportCardview']
    //butterknife 插件
    annotationProcessor 'com.jakewharton:butterknife:7.0.1'
    implementation rootProject.ext.librarys['butterknife']
    implementation rootProject.ext.librarys['circleimageview']
    implementation rootProject.ext.librarys['wavesidebar']
    implementation rootProject.ext.librarys['picasso']
    implementation rootProject.ext.librarys['refreshlayout']
    implementation rootProject.ext.librarys['activeandroid']
    implementation rootProject.ext.librarys['webSocketDemo']
    implementation rootProject.ext.librarys['greendao']
    implementation rootProject.ext.librarys['defenseCrash']
    implementation rootProject.ext.librarys['zxing']
    /* 友盟SDK依赖 */
    implementation rootProject.ext.librarys['umengCommon']
    implementation rootProject.ext.librarys['umengAnalytics']
    implementation rootProject.ext.librarys['photoView']
    implementation rootProject.ext.librarys['wheel']
    implementation rootProject.ext.librarys['easypermissions']
    // 若使用annotation需要单独引用,对于tinker的其他库都无需再引用
    annotationProcessor("com.tinkerpatch.tinker:tinker-android-anno:1.9.11") {
        changing = true
    }
    compileOnly('com.tinkerpatch.tinker:tinker-android-anno:1.9.11') { changing = true }
    implementation('com.tinkerpatch.sdk:tinkerpatch-android-sdk:1.2.11') {
        changing = true
    }
    /* 极光SDK依赖 */
    //此处以JPush 3.1.7 版本为例。
    implementation rootProject.ext.librarys['jpush']
    // 此处以JMessage 2.7.0 版本。  2.9.0
    implementation rootProject.ext.librarys['jmessage']
    // 此处以JCore 1.2.6 版本。  2.0.0
    implementation rootProject.ext.librarys['jcore']
    // 此处以JShare 1.6.0 版本为例，具体版本请参考压缩包libs的jar包版本。
    implementation rootProject.ext.librarys['jshare']
    implementation rootProject.ext.librarys['jshareQqmodel']
    // 此处以jshare-sinamodel1.6.0  版本为例，具体版本请参考压缩包libs的jar包版本。
    implementation rootProject.ext.librarys['jshareSinamodel']
    /* 其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0 */
    implementation rootProject.ext.librarys['buglyCrashreport']
    implementation rootProject.ext.librarys['buglyNativecrashreport']
    /*react native依赖*/
    implementation rootProject.ext.librarys['reactNative']
    implementation rootProject.ext.librarys['baserecycleradapter']
    implementation rootProject.ext.librarys['stetho']
    implementation rootProject.ext.librarys['stethoOkhttp3']
    implementation rootProject.ext.librarys['leakcanaryAndroid']
    implementation rootProject.ext.librarys['BaseRecyclerViewAdapterHelper']
    implementation rootProject.ext.librarys['rxjava2']
    implementation rootProject.ext.librarys['rxAndroid']
    implementation rootProject.ext.librarys['luban']
    implementation rootProject.ext.librarys.rxlifecycle
    implementation rootProject.ext.librarys.rxlifecycleAndroid
    implementation rootProject.ext.librarys.rxlifecycleComponents
    implementation rootProject.ext.librarys.okhttp
    implementation rootProject.ext.librarys.okhttpLog
    implementation rootProject.ext.librarys.okhttpPublicParams
    implementation rootProject.ext.librarys.retrofit
    implementation rootProject.ext.librarys.retrofitConverter
    implementation rootProject.ext.librarys.retrofitAdapter
    implementation rootProject.ext.librarys.gson

    // From node_modules
    implementation files('libs/universal-image-loader-1.9.5.jar')
    implementation files('libs/jshare-wechat-android-1.6.1.jar')
    implementation files('libs/umeng_social_api.jar')
    implementation files('libs/umeng_social_net.jar')
    implementation files('libs/umeng_social_tool.jar')
    //图片多选
    implementation project(':galleryfinal')
    //buildTinker.gradle是专门为Tinker配置和生成拆分包而写的
    implementation files('libs/tbs_sdk_thirdapp_v3.6.0.1310_43612_sharewithdownload_withoutGame_obfs_20180706_163319.jar')

}
