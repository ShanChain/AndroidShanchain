apply plugin: 'com.android.application'
apply from: "${project.rootDir}/config.gradle"


android {
    compileSdkVersion 27
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.shanchain.shandata"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 9
        versionName "2.1.4"
        flavorDimensions "versionCode"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            abiFilters "x86", "armeabi", "armeabi-v7a", "armeabi-v8a", "mips", "mips64"
//, 'x86_64', 'arm64-v8a'
        }


        manifestPlaceholders = [
                TENCENT_APPID: "1106258060",
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "0a20b6277a625655791e3cd9", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
                //API_KEY: "UOpGblY5ZfEI5fszsaiLQhgKEogWIQeE",
        ]
    }

    packagingOptions {
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release {
            keyAlias 'zj'
            keyPassword '123456'
            storeFile file('keystore/shanchain.jks')
            storePassword 'shanchain'
            v1SigningEnabled true
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release //设置签名
            buildConfigField "boolean", "RN_DEBUG", "true"
            buildConfigField "boolean", "LOG_DEBUG", "true"
            zipAlignEnabled true //Zipalign优化
            debuggable true
            shrinkResources false //资源缩减
            minifyEnabled false //关闭混淆
            //buildConfigField "String", "HTTP_API", "http://test.xxxx.com/"
            manifestPlaceholders = [
                    app_name     : "@string/app_name_debug",
                    baidu_api_key: "He8wMBsN4ZHiwENjiZ6q2OTT5D6c1IhD"
            ]
        }
        release {
            buildConfigField "boolean", "RN_DEBUG", "false"
            // 指定签名
            signingConfig signingConfigs.release
            //设置log日记是否打印
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //Zipalign优化
            zipAlignEnabled true
            shrinkResources !project.ext.IS_DEV_ENV // 资源缩减
            //设置是否混淆
            minifyEnabled !project.ext.IS_DEV_ENV
            //加载默认混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        arkspot {}
        qianqian {
            applicationIdSuffix ".qianqian"
//            resValue 'string', 'app_name', 'MarJar测试版'
//            resValue 'string', 'baidu_api_key', 'He8wMBsN4ZHiwENjiZ6q2OTT5D6c1IhD'
        }
//        tencent {}//投放应用宝市场
//        baidu {}//投放百度市场
//        "360" {}//投放360市场
        /*"91zhushou" {}//投放91助手
        ANZHI {}//投放安智市场
        oppo {}//投放OPPO手机应用商店
        vivo {}//投放VIVO手机应用商店
        meizu {}//投放魅族手机应用商店
        huawei {}//投放华为手机应用商店
        xiaomi {}//投放小米手机应用商店
        wandoujia {}//投放豌豆荚
        androidmarket {}//投放安卓市场
        ali {
            applicationId "com.shanchain.shandata"
        }//投放阿里平台
        googlePlay {}//投放google商店*/
        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }

    }

    configurations.all {
        all*.exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.google.zxing'
    }

    repositories {
        flatDir { dirs 'libs' }
    }

//    dexOptions {
//        dexInProcess true
//        preDexLibraries true
//        javaMaxHeapSize "4g"//越大越好
//        incremental true
//    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:support-v4:27.1.0'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation project(':common')
    implementation project(':chatinput')
    /*compile(name: 'AlivcPlayer', ext: 'aar')
         compile(name: 'AliyunVodPlayer', ext: 'aar')
         compile(name: 'AliyunVodPlayerView', ext: 'aar')*/
    implementation 'com.lzy.widget:imagepicker:0.6.1'

    //    implementation 'me.shaohui.shareutil:shareutil:1.3.8'//三方分享登录组件

    //facebook登录授权
    implementation 'com.facebook.android:facebook-login:4.33.0'
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:27.1.0'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.ashokvarma.android:bottom-navigation-bar:1.4.1'
    implementation 'com.jaeger.ninegridimageview:library:1.1.0'
    implementation 'com.android.support:cardview-v7:27.1.0'
    //butterknife 插件
    annotationProcessor 'com.jakewharton:butterknife:7.0.1'
    implementation 'com.jakewharton:butterknife:7.0.1'
    //    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.22'
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    implementation 'com.gjiazhe:wavesidebar:1.3'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'cn.bingoogolapple:bga-refreshlayout:1.1.8'

    //    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.2.3'

    //    implementation 'com.github.lovetuzitong:MultiImageSelector:1.2'

    //生成/扫描 二维码
    implementation 'cn.yipianfengye.android:zxing-library:2.2'

    /* 友盟SDK依赖 */
    implementation 'com.umeng.sdk:common:latest.integration'
    implementation 'com.umeng.sdk:analytics:latest.integration'
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    implementation 'cjt.library.wheel:camera:1.1.9'
    implementation 'pub.devrel:easypermissions:0.4.0'
    // 若使用annotation需要单独引用,对于tinker的其他库都无需再引用
    annotationProcessor("com.tinkerpatch.tinker:tinker-android-anno:1.9.11") {
        changing = true
    }
    compileOnly('com.tinkerpatch.tinker:tinker-android-anno:1.9.11') { changing = true }
    implementation('com.tinkerpatch.sdk:tinkerpatch-android-sdk:1.2.11') {
        changing = true
    }

    /* 极光SDK依赖 */

    //此处以JPush 3.1.6 版本为例。
    implementation 'cn.jiguang.sdk:jpush:3.1.7'

    // 此处以JMessage 2.7.0 版本。
    implementation 'cn.jiguang.sdk:jmessage:2.7.1'

    // 此处以JCore 1.2.5 版本。
    implementation 'cn.jiguang.sdk:jcore:1.2.6'

    // 此处以JShare 1.6.0 版本为例，具体版本请参考压缩包libs的jar包版本。
    implementation 'cn.jiguang.sdk:jshare:1.6.0'
    implementation 'cn.jiguang.sdk:jshare-qqmodel:1.6.0'

    // 此处以jshare-sinamodel1.6.0  版本为例，具体版本请参考压缩包libs的jar包版本。
    implementation 'cn.jiguang.sdk:jshare-sinamodel:1.6.0'

    //    implementation 'cn.jiguang.sdk:jshare-wechatmodel:1.6.1'

    // 此处以jshare-facebookmodel 1.6.0  版本为例，具体版本请参考压缩包libs的jar包版本。

    //    implementation 'cn.jiguang.sdk:jshare-facebookmodel:1.6.0'

    //    implementation 'cn.jiguang.sdk:jshare-twittermodel:1.6.0'  // 此处以jshare-twittermodel 1.6.0  版本为例，具体版本请参考压缩包libs的jar包版本。

    //    implementation 'cn.jiguang.sdk:jshare-jchatpromodel:1.6.0'

    // 此处以jshare-twittermodel 1.6.0  版本为例，具体版本请参考压缩包libs的jar包版本。

    /* 其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0 */
    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'

    /*react native依赖*/
    implementation 'com.facebook.react:react-native:+'
    implementation 'com.github.baserecycleradapter:library:1.1.0'

    // From node_modules

    /*react native调试依赖*/
    debugImplementation 'com.facebook.stetho:stetho:1.5.0'
    debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    testImplementation 'junit:junit:4.12'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation files('libs/universal-image-loader-1.9.5.jar')
    implementation files('libs/jshare-wechat-android-1.6.1.jar')
    implementation files('libs/umeng_social_api.jar')
    implementation files('libs/umeng_social_net.jar')
    implementation files('libs/umeng_social_tool.jar')

    //buildTinker.gradle是专门为Tinker配置和生成拆分包而写的
    apply from: 'tinkerpatch.gradle'

    //    implementation files('libs/jshare-facebook-android-1.6.1.jar')
}
